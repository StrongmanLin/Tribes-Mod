package tutorial.basic;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelChangeling extends ModelBase
{
  //fields
    ModelRenderer Neck;
    ModelRenderer Horn;
    ModelRenderer WingLeft;
    ModelRenderer WingRight;
    ModelRenderer BL2;
    ModelRenderer Muzzle1;
    ModelRenderer Muzzle2;
    ModelRenderer FangRight;
    ModelRenderer FangLeft;
    ModelRenderer FL4;
    ModelRenderer FL3;
    ModelRenderer FL2;
    ModelRenderer FL1;
    ModelRenderer FR3;
    ModelRenderer FR2;
    ModelRenderer FR1;
    ModelRenderer BL5;
    ModelRenderer BL4A;
    ModelRenderer BR2;
    ModelRenderer BR1;
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer BR3;
    ModelRenderer FR4;
    ModelRenderer FL5;
    ModelRenderer EarRight;
    ModelRenderer EarLeft;
    ModelRenderer Tail;
    ModelRenderer BL3;
    ModelRenderer BL1;
    ModelRenderer BL4B;
  
  public ModelChangeling()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Neck = new ModelRenderer(this, 116, 0);
      Neck.addBox(0F, 0F, 0F, 3, 11, 3);
      Neck.setRotationPoint(-1F, 1F, -15F);
      Neck.setTextureSize(128, 128);
      Neck.mirror = true;
      setRotation(Neck, 0.7853982F, 0F, 0F);
      Horn = new ModelRenderer(this, 110, 0);
      Horn.addBox(0F, 0F, 0F, 1, 6, 1);
      Horn.setRotationPoint(0F, -7F, -20F);
      Horn.setTextureSize(128, 128);
      Horn.mirror = true;
      setRotation(Horn, 0.5585054F, 0F, 0F);
      WingLeft = new ModelRenderer(this, 60, 40);
      WingLeft.addBox(-0.5F, -8F, -2.5F, 1, 10, 5);
      WingLeft.setRotationPoint(4F, 6F, 0.5F);
      WingLeft.setTextureSize(128, 128);
      WingLeft.mirror = true;
      setRotation(WingLeft, 0F, 0F, 0.6632251F);
      WingRight = new ModelRenderer(this, 60, 15);
      WingRight.addBox(-0.5F, -8F, -2.5F, 1, 10, 5);
      WingRight.setRotationPoint(-3F, 6F, 0.5F);
      WingRight.setTextureSize(128, 128);
      WingRight.mirror = true;
      setRotation(WingRight, 0F, 0F, -0.6632251F);
      BL2 = new ModelRenderer(this, 113, 15);
      BL2.addBox(0F, 0F, -1F, 2, 4, 1);
      BL2.setRotationPoint(2F, 14F, 6F);
      BL2.setTextureSize(128, 128);
      BL2.mirror = true;
      setRotation(BL2, 0F, 0F, 0F);
      Muzzle1 = new ModelRenderer(this, 118, 123);
      Muzzle1.addBox(0F, 0F, 0F, 4, 4, 1);
      Muzzle1.setRotationPoint(-1.5F, 0F, -19F);
      Muzzle1.setTextureSize(128, 128);
      Muzzle1.mirror = true;
      setRotation(Muzzle1, 0F, 0F, 0F);
      Muzzle2 = new ModelRenderer(this, 118, 118);
      Muzzle2.addBox(0F, 0F, 0F, 3, 2, 2);
      Muzzle2.setRotationPoint(-1F, 1F, -21F);
      Muzzle2.setTextureSize(128, 128);
      Muzzle2.mirror = true;
      setRotation(Muzzle2, 0F, 0F, 0F);
      FangRight = new ModelRenderer(this, 100, 120);
      FangRight.addBox(0F, 0F, 0F, 0, 4, 1);
      FangRight.setRotationPoint(-0.5F, 2F, -21F);
      FangRight.setTextureSize(128, 128);
      FangRight.mirror = true;
      setRotation(FangRight, 0.2268928F, 0F, 0F);
      FangLeft = new ModelRenderer(this, 100, 110);
      FangLeft.addBox(0F, 0F, 0F, 0, 4, 1);
      FangLeft.setRotationPoint(1.5F, 2F, -21F);
      FangLeft.setTextureSize(128, 128);
      FangLeft.mirror = true;
      setRotation(FangLeft, 0.2268928F, 0F, 0F);
      FL4 = new ModelRenderer(this, 120, 110);
      FL4.addBox(-1F, 8F, -1F, 2, 1, 1);
      FL4.setRotationPoint(3F, 14F, -7F);
      FL4.setTextureSize(128, 128);
      FL4.mirror = true;
      setRotation(FL4, 0F, 0F, 0F);
      FL3 = new ModelRenderer(this, 120, 100);
      FL3.addBox(-1F, 7F, -1F, 2, 1, 2);
      FL3.setRotationPoint(3F, 14F, -7F);
      FL3.setTextureSize(128, 128);
      FL3.mirror = true;
      setRotation(FL3, 0F, 0F, 0F);
      FL2 = new ModelRenderer(this, 120, 104);
      FL2.addBox(-1F, 5F, 0F, 2, 2, 1);
      FL2.setRotationPoint(3F, 14F, -7F);
      FL2.setTextureSize(128, 128);
      FL2.mirror = true;
      setRotation(FL2, 0F, 0F, 0F);
      FL1 = new ModelRenderer(this, 120, 90);
      FL1.addBox(-1F, 0F, -1F, 2, 5, 2);
      FL1.setRotationPoint(3F, 14F, -7F);
      FL1.setTextureSize(128, 128);
      FL1.mirror = true;
      setRotation(FL1, 0F, 0F, 0F);
      FR3 = new ModelRenderer(this, 120, 86);
      FR3.addBox(-1F, 5F, -1F, 2, 2, 1);
      FR3.setRotationPoint(-2F, 14F, -7F);
      FR3.setTextureSize(128, 128);
      FR3.mirror = true;
      setRotation(FR3, 0F, 0F, 0F);
      FR2 = new ModelRenderer(this, 120, 78);
      FR2.addBox(-1F, 2F, 0F, 2, 3, 1);
      FR2.setRotationPoint(-2F, 14F, -7F);
      FR2.setTextureSize(128, 128);
      FR2.mirror = true;
      setRotation(FR2, 0F, 0F, 0F);
      FR1 = new ModelRenderer(this, 120, 72);
      FR1.addBox(-1F, 0F, -1F, 2, 2, 2);
      FR1.setRotationPoint(-2F, 14F, -7F);
      FR1.setTextureSize(128, 128);
      FR1.mirror = true;
      setRotation(FR1, 0F, 0F, 0F);
      BL5 = new ModelRenderer(this, 120, 66);
      BL5.addBox(-1F, 9F, -1F, 2, 1, 2);
      BL5.setRotationPoint(3F, 14F, 6F);
      BL5.setTextureSize(128, 128);
      BL5.mirror = true;
      setRotation(BL5, 0F, 0F, 0F);
      BL4A = new ModelRenderer(this, 120, 34);
      BL4A.addBox(0F, 7F, -1.5F, 2, 2, 1);
      BL4A.setRotationPoint(2F, 14F, 6F);
      BL4A.setTextureSize(128, 128);
      BL4A.mirror = true;
      setRotation(BL4A, 0F, 0F, 0F);
      BR2 = new ModelRenderer(this, 120, 55);
      BR2.addBox(-1F, 5F, -1F, 2, 2, 1);
      BR2.setRotationPoint(-2F, 14F, 6F);
      BR2.setTextureSize(128, 128);
      BR2.mirror = true;
      setRotation(BR2, 0F, 0F, 0F);
      BR1 = new ModelRenderer(this, 118, 46);
      BR1.addBox(-1F, 0F, -1F, 2, 5, 2);
      BR1.setRotationPoint(-2F, 14F, 6F);
      BR1.setTextureSize(128, 128);
      BR1.mirror = true;
      setRotation(BR1, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 30, 114);
      Head.addBox(-4F, -4F, -6F, 7, 8, 6);
      Head.setRotationPoint(1F, 0F, -12F);
      Head.setTextureSize(128, 128);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 0, 104);
      Body.addBox(0F, 0F, 0F, 7, 16, 8);
      Body.setRotationPoint(-3F, 14F, -8F);
      Body.setTextureSize(128, 128);
      Body.mirror = true;
      setRotation(Body, 1.570796F, 0F, 0F);
      BR3 = new ModelRenderer(this, 120, 39);
      BR3.addBox(-1F, 7F, -1F, 2, 3, 2);
      BR3.setRotationPoint(-2F, 14F, 6F);
      BR3.setTextureSize(128, 128);
      BR3.mirror = true;
      setRotation(BR3, 0F, 0F, 0F);
      FR4 = new ModelRenderer(this, 100, 20);
      FR4.addBox(-1F, 7F, 0F, 2, 3, 1);
      FR4.setRotationPoint(-2F, 14F, -7F);
      FR4.setTextureSize(128, 128);
      FR4.mirror = true;
      setRotation(FR4, 0F, 0F, 0F);
      FL5 = new ModelRenderer(this, 100, 30);
      FL5.addBox(-1F, 9F, -1F, 2, 1, 2);
      FL5.setRotationPoint(3F, 14F, -7F);
      FL5.setTextureSize(128, 128);
      FL5.mirror = true;
      setRotation(FL5, 0F, 0F, 0F);
      EarRight = new ModelRenderer(this, 100, 40);
      EarRight.addBox(-4F, -5F, -4F, 1, 4, 1);
      EarRight.setRotationPoint(1F, -1F, -10F);
      EarRight.setTextureSize(128, 128);
      EarRight.mirror = true;
      setRotation(EarRight, -0.1919862F, 0F, 0F);
      EarLeft = new ModelRenderer(this, 100, 48);
      EarLeft.addBox(3F, -5F, -4F, 1, 4, 1);
      EarLeft.setRotationPoint(0F, -1F, -10F);
      EarLeft.setTextureSize(128, 128);
      EarLeft.mirror = true;
      setRotation(EarLeft, -0.1919862F, 0F, 0F);
      Tail = new ModelRenderer(this, 60, 60);
      Tail.addBox(0.5F, 0F, -1F, 1, 11, 2);
      Tail.setRotationPoint(-0.5F, 8F, 7F);
      Tail.setTextureSize(128, 128);
      Tail.mirror = true;
      setRotation(Tail, 1.012291F, 0F, 0F);
      BL3 = new ModelRenderer(this, 100, 76);
      BL3.addBox(0F, 4F, -0.5F, 2, 3, 1);
      BL3.setRotationPoint(2F, 14F, 6F);
      BL3.setTextureSize(128, 128);
      BL3.mirror = true;
      setRotation(BL3, 0F, 0F, 0F);
      BL1 = new ModelRenderer(this, 100, 84);
      BL1.addBox(-1F, 0F, 0F, 2, 2, 1);
      BL1.setRotationPoint(3F, 14F, 6F);
      BL1.setTextureSize(128, 128);
      BL1.mirror = true;
      setRotation(BL1, 0F, 0F, 0F);
      BL4B = new ModelRenderer(this, 120, 60);
      BL4B.addBox(0F, 7F, 0.5F, 2, 2, 1);
      BL4B.setRotationPoint(2F, 14F, 6F);
      BL4B.setTextureSize(128, 128);
      BL4B.mirror = true;
      setRotation(BL4B, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Neck.render(f5);
    Horn.render(f5);
    WingLeft.render(f5);
    WingRight.render(f5);
    BL2.render(f5);
    Muzzle1.render(f5);
    Muzzle2.render(f5);
    FangRight.render(f5);
    FangLeft.render(f5);
    FL4.render(f5);
    FL3.render(f5);
    FL2.render(f5);
    FL1.render(f5);
    FR3.render(f5);
    FR2.render(f5);
    FR1.render(f5);
    BL5.render(f5);
    BL4A.render(f5);
    BR2.render(f5);
    BR1.render(f5);
    Head.render(f5);
    Body.render(f5);
    BR3.render(f5);
    FR4.render(f5);
    FL5.render(f5);
    EarRight.render(f5);
    EarLeft.render(f5);
    Tail.render(f5);
    BL3.render(f5);
    BL1.render(f5);
    BL4B.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.BR1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.BR2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.BR3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.FR1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.FR2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.FR3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.FR4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.BL1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.BL2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.BL3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.BL4A.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.BL4B.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.BL5.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.FL1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.FL2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.FL3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.FL4.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.FL5.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    if(entity.onGround)
    	this.WingRight.rotateAngleZ = (float)Math.PI * -1 / 8;
    else
    	this.WingRight.rotateAngleZ = (float)Math.PI * 3 / 2 - (float)Math.cos(16 * entity.posY * Math.PI);
    if(entity.onGround)
    	this.WingLeft.rotateAngleZ = (float)Math.PI / 8;
    else
    	this.WingLeft.rotateAngleZ = (float)Math.PI / 2  + (float)(Math.cos(16 * entity.posY * Math.PI));
  }

}
